{"mappings":"iiBAAA,I,EAAAA,EAAAC,EAAA,S,aCAAC,EAAAD,EAAA,S,6BCAAC,EAAAD,EAAA,S,sCAKME,EAAUC,SAASC,cAAc,YAEjCC,G,EAAsBC,EAAAL,EAAA,CAAAK,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IAItBC,E,4FAAiB,EAAAC,EAAAC,e,OAAnBF,EAAQG,EAAAC,KAANJ,OAERK,EAAAC,QAAQC,YACRhB,EAAQiB,mBACN,aACA,EAAyBT,EAAMC,IAEjCK,EAAAC,QAAQG,S,gDAERC,QAAQC,MAAMR,EAAAS,GAAMC,S,kEAbUd,G,iCAiB5B,EAAyB,SAAGA,EAAKC,GAgBrC,MAfe,6DAIGc,OAFQf,EAAKgB,GAAG,4FAI4BD,OAF5Cf,EAAKiB,YACN,uFAIuDF,OAHVG,EAC5ClB,EAAKmB,OACL,kFAGSJ,OAF6CK,EAClDnB,GACA,OAAmCc,OAA9Bf,EAAKqB,aAAaC,MAAM,EAAG,GAAG,8C,EAOrDJ,EAAa,SAAAC,GACjB,OAAIA,EAAMI,OAAS,GACGJ,EAAMG,MAAM,EAAG,IAAM,MAGlCH,C,EAILC,EAAa,SAAAnB,GACjB,IAAIuB,EAAgB,GAEfC,GAAS,EAATC,GAAS,EAATC,OAASC,E,IAAd,QAAKC,EAAAC,EAAa7B,EAAM8B,OAAAC,cAAnBP,GAAAI,EAAAC,EAASG,QAAAC,MAATT,GAAS,GAAT,IAAIU,EAAJN,EAASO,MACZZ,EAAca,KAAKF,EAAMG,K,WADtBZ,GAAS,EAATC,EAASY,C,aAATd,GAAS,MAATK,EAASU,QAATV,EAASU,Q,YAATd,E,MAAAC,C,EAIL,QAAQ,GACN,KAAKH,EAAcD,OAAS,EAC1B,MAAO,GAAwBR,OAArBS,EAAc,GAAG,MAAqBT,OAAjBS,EAAc,GAAG,cAElD,KAA8B,IAAzBA,EAAcD,OACjB,MAAO,GAAwBR,OAArBS,EAAc,GAAG,MAAqBT,OAAjBS,EAAc,IAE/C,KAA8B,IAAzBA,EAAcD,OACjB,MAAO,GAAoBR,OAAjBS,EAAc,I,ED9DxBiB,EAAU,mC,SAEDC,I,OAAAA,EAAf9C,EAAAL,EAAA,CAAAK,EAAAC,GAAAC,MAAA,SAAAC,I,IAOO0B,EAAAC,EAAAC,EAAAG,EAAAD,EAAIc,EAQG3C,E,kEAdZ4C,YAAcC,aAAaC,QAAQ,WACnCC,aAAeC,KAAKC,MAAML,aAKrBnB,GAAW,EAAXC,GAAW,EAAXC,OAAWC,E,SAAXE,EAAeiB,aAAaG,QAAOnB,OAAAC,Y,UAAnCP,GAAAI,EAAAC,EAAWG,QAAAC,KAAA,C,uBAAPS,EAAJd,EAAWO,MACdzB,QAAQwC,IACN,0DACAJ,aAAaG,SAEfvC,QAAQwC,IAAI,0BAA2BR,G,mBAGdS,EAAAC,QAAMC,IAC3B,sCAAyDvC,OAAnB4B,EAAQ,aAAmB5B,OAAR0B,EAAQ,oB,QAD7DzC,EAAMI,EAAAC,KAAJL,KAIRW,QAAQwC,IAAInD,GACZL,EAAoBK,G,kDAMpBW,QAAQC,MAAMR,EAAAS,GAAMC,S,QAnBnBW,GAAW,E,yEAAXC,GAAW,EAAXC,EAAWvB,EAAAmD,G,4BAAX9B,GAAW,MAAXK,EAAWU,QAAXV,EAAWU,S,sBAAXd,EAAW,C,sBAAXC,E,4IAPwC6B,MAAAC,KAAAC,U,aAAhChB,EAAgCc,MAAAC,KAAAC,U,CA+B/CC,G,wDD1BA,EAAAC,EAAAC,gBACAC,OAAOC,iBAAiB,SAAU1E,EAAA2E,gB","sources":["src/my-library.js","src/js/fromStorage/fetchWatchedFromStorage.js","src/js/fromStorage/renderWatchedMarkup.js"],"sourcesContent":["import { hideScrollUpBtn } from './js/hide-scroll-up-button';\nimport { smoothscroll } from './js/smoothscroll';\n// import { renderMarkup } from './js/showTrending/renderTrending';\nimport { fetchMovieByIdFromStorageWatched } from './js/fromStorage/fetchWatchedFromStorage';\nimport { hiddenElementsOnMobileVersion } from './js/hideElementsInMobileVersion';\n// import './js/pagination/pagination';\n\nimport './js/modalTeam/teamModal';\nimport './js/modalTeam/renderTeam';\nimport './js/vanilla';\nimport './js/modal';\n\nsmoothscroll();\nwindow.addEventListener('scroll', hideScrollUpBtn);\n","import axios from 'axios';\nimport { renderWatchedMarkup } from './renderWatchedMarkup';\n\nexport { fetchMovieByIdFromStorageWatched };\n\nconst API_KEY = 'ac91775ba29254b7e75060011bf34a90';\n\nasync function fetchMovieByIdFromStorageWatched() {\n  savedMovies = localStorage.getItem('movieID');\n  parsedMovies = JSON.parse(savedMovies);\n  //   console.log(parsedMovies);\n\n  //   gallery.innerHTML = '';\n\n  for (let movieId of parsedMovies.watched) {\n    console.log(\n      'fetchMovieByIdFromStorageWatched ~ parsedMovies.watched',\n      parsedMovies.watched\n    );\n    console.log('Here is your movies ID:', movieId);\n\n    try {\n      const { data } = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n      );\n      // renderWatchedMarkup(data);\n      console.log(data);\n      renderWatchedMarkup(data);\n      // запускаем функцию один раз, иначе уходит в infinity loop\n      //   fetchMovieByIdFromStorageWatched = function () {\n      //     return false;\n      //   };\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n}\n\nfetchMovieByIdFromStorageWatched();\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { fetchGenres } from '../fetchGenres';\n\nexport { renderWatchedMarkup };\n\nconst gallery = document.querySelector('.gallery');\n\nconst renderWatchedMarkup = async data => {\n  try {\n    // const data = await fetchMovieByIdFromStorageWatched();\n    // console.log(data);\n    const { genres } = await fetchGenres();\n    // console.log(genres);\n    Loading.hourglass();\n    gallery.insertAdjacentHTML(\n      'afterbegin',\n      watchedGalleryMarkupСreat(data, genres)\n    );\n    Loading.remove();\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nconst watchedGalleryMarkupСreat = (data, genres) => {\n  const markup = `\n      <li class=\"movieCard\">\n              <a data-id=\"${data.id}\">\n                  <img class=\"movieCard__image\" src=\"https://image.tmdb.org/t/p/w500${\n                    data.poster_path\n                  }\" alt=\"movieImg\" />\n                  <p class=\"movieCard__info movieCard__title\">${titleSlice(\n                    data.title\n                  )}</p>\n                      <p class=\"movieCard__info movieCard__description\">${cardGenres(\n                        genres\n                      )} | ${data.release_date.slice(0, 4)}</p>\n              </a>\n      </li>\n    `;\n  return markup;\n};\n\nconst titleSlice = title => {\n  if (title.length > 30) {\n    const titleSliced = title.slice(0, 30) + '...';\n    return titleSliced;\n  } else {\n    return title;\n  }\n};\n\nconst cardGenres = genres => {\n  let cardGenresArr = [];\n\n  for (let genre of genres) {\n    cardGenresArr.push(genre.name);\n  }\n\n  switch (true) {\n    case cardGenresArr.length > 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}, other...`;\n\n    case cardGenresArr.length === 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}`;\n\n    case cardGenresArr.length === 1:\n      return `${cardGenresArr[0]}`;\n\n    default:\n      break;\n  }\n};\n\n// renderWatchedMarkup();\n"],"names":["$kfhZi","parcelRequire","$bpxeT","$3edbe494ea87ec58$var$gallery","document","querySelector","$3edbe494ea87ec58$export$1fbb1e823a6c5950","$parcel$interopDefault","$2TvXO","mark","_callee","data","genres","$3likm","fetchGenres","_ctx","sent","$7rQOT","Loading","hourglass","insertAdjacentHTML","remove","console","error","t0","message","concat","id","poster_path","$3edbe494ea87ec58$var$titleSlice","title","$3edbe494ea87ec58$var$cardGenres","release_date","slice","length","cardGenresArr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","genre","value","push","name","err","return","$aa31d2a32f2a478a$var$API_KEY","$aa31d2a32f2a478a$var$_fetchMovieByIdFromStorageWatched","movieId","savedMovies","localStorage","getItem","parsedMovies","JSON","parse","watched","log","$dIxxU","default","get","t1","apply","this","arguments","$aa31d2a32f2a478a$export$76db5913f35af0d5","$eI9Bk","smoothscroll","window","addEventListener","hideScrollUpBtn"],"version":3,"file":"my-library.f82bfb1b.js.map"}