{"mappings":"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","sources":["src/my-library.js","src/js/fromStorage/fetchWatchedFromStorage.js","src/js/fromStorage/renderWatchedMarkup.js","src/js/fromStorage/fetchMovieByIdFromStorageQueue.js","src/js/fromStorage/renderQueueMarkup.js"],"sourcesContent":["import { hideScrollUpBtn } from './js/hide-scroll-up-button';\nimport { smoothscroll } from './js/smoothscroll';\n// import { renderMarkup } from './js/showTrending/renderTrending';\nimport { hiddenElementsOnMobileVersion } from './js/hideElementsInMobileVersion';\nimport { fetchMovieByIdFromStorageWatched } from './js/fromStorage/fetchWatchedFromStorage';\nimport { fetchMovieByIdFromStorageQueue } from './js/fromStorage/fetchMovieByIdFromStorageQueue';\nimport storage from './js/storage';\n\n// import './js/pagination/pagination';\nimport './js/modalTeam/renderTeam';\nimport './js/modalTeam/teamModal';\nimport './js/vanilla';\nimport './js/modal';\n\nsmoothscroll();\nwindow.addEventListener('scroll', hideScrollUpBtn);\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport axios from 'axios';\nimport { renderWatchedMarkup } from './renderWatchedMarkup';\nimport { auth, dbRef } from '../firebase';\nimport {\n  getDatabase,\n  ref,\n  set,\n  onValue,\n  child,\n  get,\n  push,\n  update,\n} from 'firebase/database';\n\nimport { onAuthStateChanged } from 'firebase/auth';\n\n// const myLibrLink = document.querySelector('.header-nav_libr');\nconst btnQueue = document.querySelector('.header_btn-queue');\nconst btnWatched = document.querySelector('.header_btn-watched');\nconst gallery = document.querySelector('.gallery');\n\nconst API_KEY = 'ac91775ba29254b7e75060011bf34a90';\n\n// myLibrLink.addEventListener('click', fetchMovieByIdFromStorageWatched);\nbtnWatched.addEventListener('click', fetchMovieByIdFromStorageWatched);\n\nexport { fetchMovieByIdFromStorageWatched };\n\nasync function fetchMovieByIdFromStorageWatched() {\n  btnQueue.classList.remove('current-btn');\n  btnWatched.classList.add('current-btn');\n\n  // const savedMovies = await JSON.parse(getWatched());\n  // const parsedMovies = JSON.parse(savedMovies);\n  // console.log(parsedMovies);\n\n  gallery.innerHTML = '';\n\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      get(child(dbRef, `users/${user.uid}/watched`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            const savedMovies = Object.values(snapshot.val());\n            savedMovies.forEach(element => {\n              axios\n                .get(\n                  `https://api.themoviedb.org/3/movie/${element}?api_key=${API_KEY}&language=en-US`\n                )\n                .then(({ data }) => renderWatchedMarkup(data));\n            });\n          } else {\n            // console.log('No data available');\n            Report.info(\n              'No movies in collection now',\n              'Add movies to see them here'\n            );\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      console.log('no user');\n    }\n  });\n}\n\nfetchMovieByIdFromStorageWatched();\n//\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { fetchGenres } from '../fetchGenres';\n\nexport { renderWatchedMarkup };\n\nconst gallery = document.querySelector('.gallery');\n\nconst renderWatchedMarkup = async data => {\n  try {\n    // const data = await fetchMovieByIdFromStorageWatched();\n    // console.log(data);\n    const { genres } = await fetchGenres();\n    // console.log(genres);\n    Loading.hourglass();\n    gallery.insertAdjacentHTML(\n      'afterbegin',\n      watchedGalleryMarkupСreat(data, genres)\n    );\n    Loading.remove();\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nconst watchedGalleryMarkupСreat = (data, genres) => {\n  const markup = `\n      <li class=\"movieCard\">\n              <a data-id=\"${data.id}\">\n                  <img class=\"movieCard__image\" src=\"https://image.tmdb.org/t/p/w500${\n                    data.poster_path\n                  }\" alt=\"movieImg\" />\n                  <p class=\"movieCard__info movieCard__title\">${titleSlice(\n                    data.title\n                  )}</p>\n                      <p class=\"movieCard__info movieCard__description\">${cardGenres(\n                        genres\n                      )} | ${data.release_date.slice(0, 4)}</p>\n              </a>\n      </li>\n    `;\n  return markup;\n};\n\nconst titleSlice = title => {\n  if (title.length > 30) {\n    const titleSliced = title.slice(0, 30) + '...';\n    return titleSliced;\n  } else {\n    return title;\n  }\n};\n\nconst cardGenres = genres => {\n  let cardGenresArr = [];\n\n  for (let genre of genres) {\n    cardGenresArr.push(genre.name);\n  }\n\n  switch (true) {\n    case cardGenresArr.length > 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}, other...`;\n\n    case cardGenresArr.length === 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}`;\n\n    case cardGenresArr.length === 1:\n      return `${cardGenresArr[0]}`;\n\n    default:\n      break;\n  }\n};\n\n// renderWatchedMarkup();\n","import axios from 'axios';\nimport { renderQueueMarkup } from './renderQueueMarkup';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nimport { auth, dbRef } from '../firebase';\nimport {\n  getDatabase,\n  ref,\n  set,\n  onValue,\n  child,\n  get,\n  push,\n  update,\n} from 'firebase/database';\n\nimport { onAuthStateChanged } from 'firebase/auth';\n\nexport { fetchMovieByIdFromStorageQueue };\n\nconst btnQueue = document.querySelector('.header_btn-queue');\nconst btnWatched = document.querySelector('.header_btn-watched');\nconst gallery = document.querySelector('.gallery');\n\nconst API_KEY = 'ac91775ba29254b7e75060011bf34a90';\n\nbtnQueue.addEventListener('click', fetchMovieByIdFromStorageQueue);\n\nasync function fetchMovieByIdFromStorageQueue() {\n  btnWatched.classList.remove('current-btn');\n  btnQueue.classList.add('current-btn');\n\n  gallery.innerHTML = '';\n\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      get(child(dbRef, `users/${user.uid}/queue`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            const savedMovies = Object.values(snapshot.val());\n            savedMovies.forEach(element => {\n              axios\n                .get(\n                  `https://api.themoviedb.org/3/movie/${element}?api_key=${API_KEY}&language=en-US`\n                )\n                .then(({ data }) => renderQueueMarkup(data));\n            });\n          } else {\n            Report.info(\n              'No movies in collection now',\n              'Add movies to see them here'\n            );\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      console.log('no user');\n    }\n  });\n}\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { fetchGenres } from '../fetchGenres';\n\nexport { renderQueueMarkup };\n\nconst gallery = document.querySelector('.gallery');\n\nconst renderQueueMarkup = async data => {\n  try {\n    // const data = await fetchMovieByIdFromStorageWatched();\n    // console.log(data);\n    const { genres } = await fetchGenres();\n    // console.log(genres);\n    Loading.hourglass();\n    gallery.insertAdjacentHTML(\n      'afterbegin',\n      queueGalleryMarkupСreat(data, genres)\n    );\n    Loading.remove();\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nconst queueGalleryMarkupСreat = (data, genres) => {\n  const markup = `\n      <li class=\"movieCard\">\n              <a data-id=\"${data.id}\">\n                  <img class=\"movieCard__image\" src=\"https://image.tmdb.org/t/p/w500${\n                    data.poster_path\n                  }\" alt=\"movieImg\" />\n                  <p class=\"movieCard__info movieCard__title\">${titleSlice(\n                    data.title\n                  )}</p>\n                      <p class=\"movieCard__info movieCard__description\">${cardGenres(\n                        genres\n                      )} | ${data.release_date.slice(0, 4)}</p>\n              </a>\n      </li>\n    `;\n  return markup;\n};\n\nconst titleSlice = title => {\n  if (title.length > 30) {\n    const titleSliced = title.slice(0, 30) + '...';\n    return titleSliced;\n  } else {\n    return title;\n  }\n};\n\nconst cardGenres = genres => {\n  let cardGenresArr = [];\n\n  for (let genre of genres) {\n    cardGenresArr.push(genre.name);\n  }\n\n  switch (true) {\n    case cardGenresArr.length > 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}, other...`;\n\n    case cardGenresArr.length === 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}`;\n\n    case cardGenresArr.length === 1:\n      return `${cardGenresArr[0]}`;\n\n    default:\n      break;\n  }\n};\n"],"names":["$kfhZi","parcelRequire","$bpxeT","$3edbe494ea87ec58$var$gallery","document","querySelector","$3edbe494ea87ec58$export$1fbb1e823a6c5950","$parcel$interopDefault","$2TvXO","mark","_callee","data","genres","$3likm","fetchGenres","_ctx","sent","$7rQOT","Loading","hourglass","insertAdjacentHTML","remove","console","error","t0","message","concat","id","poster_path","$3edbe494ea87ec58$var$titleSlice","title","$3edbe494ea87ec58$var$cardGenres","release_date","slice","length","cardGenresArr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","genre","value","push","name","err","return","$aa31d2a32f2a478a$var$btnQueue","$aa31d2a32f2a478a$var$btnWatched","$aa31d2a32f2a478a$var$gallery","$aa31d2a32f2a478a$var$API_KEY","$aa31d2a32f2a478a$export$76db5913f35af0d5","$aa31d2a32f2a478a$var$_fetchMovieByIdFromStorageWatched","apply","this","arguments","classList","add","innerHTML","$gQOBw","onAuthStateChanged","$iNWLi","auth","user","$cokon","get","child","dbRef","uid","then","snapshot","exists","Object","values","val","forEach","element","$dIxxU","default","param","$fivgP","Report","info","catch","log","addEventListener","$0b589136e8229473$var$gallery","$0b589136e8229473$export$3a5aa6f3e56312e1","$0b589136e8229473$var$titleSlice","$0b589136e8229473$var$cardGenres","$65a4d08344c41194$var$btnQueue","$65a4d08344c41194$var$btnWatched","$65a4d08344c41194$var$gallery","$65a4d08344c41194$var$API_KEY","$65a4d08344c41194$var$_fetchMovieByIdFromStorageQueue","$eI9Bk","smoothscroll","window","hideScrollUpBtn"],"version":3,"file":"my-library.ad49b263.js.map"}