{"mappings":"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","sources":["src/my-library.js","src/js/firebase-library.js"],"sourcesContent":["import { hideScrollUpBtn } from './js/hide-scroll-up-button';\nimport { smoothscroll } from './js/smoothscroll';\nimport { hiddenElementsOnMobileVersion } from './js/hideElementsInMobileVersion';\nimport { fetchMovieByIdFromStorageWatched } from './js/fromStorage/fetchWatchedFromStorage';\nimport { fetchMovieByIdFromStorageQueue } from './js/fromStorage/fetchMovieByIdFromStorageQueue';\n\nimport './js/modalTeam/renderTeam';\nimport './js/modalTeam/teamModal';\nimport './js/vanilla';\nimport './js/modal';\nimport './js/firebase-library';\n\nsmoothscroll();\nwindow.addEventListener('scroll', hideScrollUpBtn);\n\nconst btnQueue = document.querySelector('.header_btn-queue');\nconst btnWatched = document.querySelector('.header_btn-watched');\n\nif (btnWatched.classList.contains('current-btn')) {\n  fetchMovieByIdFromStorageWatched();\n}\n\nif (btnQueue.classList.contains('current-btn')) {\n  fetchMovieByIdFromStorageQueue();\n}\n\nbtnQueue.addEventListener('click', () => {\n  btnWatched.classList.remove('current-btn');\n  btnQueue.classList.add('current-btn');\n  fetchMovieByIdFromStorageQueue();\n});\n\nbtnWatched.addEventListener('click', () => {\n  btnQueue.classList.remove('current-btn');\n  btnWatched.classList.add('current-btn');\n  fetchMovieByIdFromStorageWatched();\n});\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\n\nimport { onBackdropClick, onEscKeyPress } from './modal';\n\nimport {\n  getAuth,\n  onAuthStateChanged,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  signOut,\n  signInWithPopup,\n  GoogleAuthProvider,\n  sendEmailVerification,\n  // signInWithRedirect,\n  RecaptchaVerifier,\n  signInWithPhoneNumber,\n  // connectAuthEmulator,\n} from 'firebase/auth';\n\nimport {\n  getDatabase,\n  ref,\n  set,\n  onValue,\n  child,\n  get,\n  push,\n  update,\n} from 'firebase/database';\n\n// Initialize Firebase\nconst firebaseApp = initializeApp({\n  apiKey: 'AIzaSyCrjIQ-i-DV-fkmDO-FB_HdRZGKiM7ste8',\n  authDomain: 'filmoteka-project9.firebaseapp.com',\n  projectId: 'filmoteka-project9',\n  storageBucket: 'filmoteka-project9.appspot.com',\n  messagingSenderId: '1031272501813',\n  appId: '1:1031272501813:web:a2ca2d3955cbe4cf9a577c',\n  measurementId: 'G-1NQ8JF0W90',\n  databaseURL:\n    'https://filmoteka-project9-default-rtdb.europe-west1.firebasedatabase.app/',\n});\n\nexport const auth = getAuth(firebaseApp);\n\n// Initialize Realtime Database and get a reference to the service\nconst db = getDatabase(firebaseApp);\n\nexport const dbRef = ref(db);\n\n// ================= запуск локального эмулятора =================\n\n//из это папки >>> C:\\Filmoteka\n//запуск хоcтинга >>> firebase serve --only hosting\n//запуск эмулятора >>> firebase emulators:start --only auth\n\n// connectAuthEmulator(auth, 'http://localhost:9099/');\n\n// ============================================================================\n\nconst refs = {\n  btnCloseModal: document.querySelector('[data-signInModal-close]'),\n  btnSignIn: document.querySelector('#signInModalOpen'),\n  btnLogOut: document.querySelector('#logoutBtn'),\n  btnLoginWithPhone: document.querySelector('#LogInWithPhoneBtn'),\n  btnPhoneLogin: document.querySelector('#LogInPhone'),\n  btnGoogleLogin: document.querySelector('#googleLoginBtn'),\n  btnLoginWithEmail: document.querySelector('#loginWithEmailBtn'),\n  btnLoginEmail: document.querySelector('#loginEmailBtn'),\n  btnSignUpWithEmail: document.querySelector('#SignUpWitnEmailBtn'),\n  btnSignUpEmail: document.querySelector('#SignUpBtn'),\n  btnConfirmEmail: document.querySelector('#ConfirmEmail'),\n\n  backdrop: document.querySelector('[data-signInModal]'),\n  navigation: document.querySelector('.navigation__list'),\n  boxUser: document.querySelector('.user__box'),\n  boxSignInModal: document.querySelector('.signInModal__box'),\n  boxSignInWithEmailModal: document.querySelector(\n    '.signInModal__signInWithEmail'\n  ),\n  boxSignUpWithEmail: document.querySelector('.signInModal__signUpWithEmail'),\n  boxLogInWithPhone: document.querySelector('.signInModal__LogInWithPhone'),\n  boxRecaptcha: document.querySelector('.recaptcha-container'),\n\n  loginEmail: document.querySelector('#email'),\n  loginPassword: document.querySelector('#password'),\n  signUpEmail: document.querySelector('#emailSignUp'),\n  signUpPassword: document.querySelector('#passwordSignUp'),\n  loginPhone: document.querySelector('#phone'),\n  loginPhoneCode: document.querySelector('#loginPhoneCode'),\n  modal: document.querySelector('[data-signInModal]'),\n  userName: document.querySelector('.user__name'),\n  formField: document.querySelector('.auth-form__field'),\n  formTitle: document.querySelector('.auth-form__title'),\n  body: document.querySelector('body'),\n};\n\n// close Modal Func auth =====================================================================================\n\nconst closeModalFunc = () => {\n  refs.btnCloseModal.addEventListener('click', () => {\n    refs.backdrop.classList.add('backdrop--hidden');\n    refs.body.classList.remove('scroll-hidden');\n  });\n\n  window.addEventListener('keydown', e => {\n    const ESC_KEY_CODE = 'Escape';\n    const isEscKey = e.code === ESC_KEY_CODE;\n    if (isEscKey) {\n      refs.backdrop.classList.add('backdrop--hidden');\n      refs.body.classList.remove('scroll-hidden');\n    }\n  });\n\n  refs.backdrop.addEventListener('click', e => {\n    if (event.currentTarget === event.target) {\n      refs.backdrop.classList.add('backdrop--hidden');\n      refs.body.classList.remove('scroll-hidden');\n    }\n  });\n\n  if (refs.backdrop.classList.contains('backdrop--hidden')) {\n    refs.btnCloseModal.removeEventListener('click', () => {\n      refs.backdrop.classList.add('backdrop--hidden');\n      refs.body.classList.remove('scroll-hidden');\n    });\n\n    window.removeEventListener('keydown', e => {\n      const ESC_KEY_CODE = 'Escape';\n      const isEscKey = e.code === ESC_KEY_CODE;\n      if (isEscKey) {\n        refs.backdrop.classList.add('backdrop--hidden');\n        refs.body.classList.remove('scroll-hidden');\n      }\n    });\n\n    refs.backdrop.removeEventListener('click', e => {\n      if (event.currentTarget === event.target) {\n        refs.backdrop.classList.add('backdrop--hidden');\n        refs.body.classList.remove('scroll-hidden');\n      }\n    });\n  }\n};\n\n// monitor Auth State =====================================================================================\n\nconst monitorAuthState = async () => {\n  try {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        // console.log(user);\n\n        switch (true) {\n          case user.displayName !== null && user.photoURL !== null:\n            refs.boxUser.innerHTML = `<img class=\"user__img\" src= ${user.photoURL} alt=\"\" />\n                                  <div class=\"user__info\"><p class=\"user__greeting\">Good to see You again</p>\n                                  <p class=\"user__name\"> ${user.displayName}</p></div>`;\n            break;\n\n          case user.displayName === null && user.photoURL === null:\n            refs.boxUser.innerHTML = `<p class=\"user__greeting\">Good to see You again</p>\n                                  <p class=\"user__name\">Logged in as ${user.email}</p>`;\n            break;\n\n          default:\n            break;\n        }\n        refs.navigation.innerHTML = `<li class=\"navigation__item\">\n          <a class=\"navigation__link \" href=\"./index.html\">HOME</a>\n        </li>\n        <li class=\"navigation__item\">\n          <a class=\"navigation__link navigation__link--current\" href=\"./my-library.html\">MY LIBRARY</a>\n        </li>`;\n\n        refs.btnSignIn.classList.add('visually-hidden');\n        refs.btnLogOut.classList.remove('visually-hidden');\n        refs.backdrop.classList.add('backdrop--hidden');\n        refs.btnLogOut.addEventListener('click', logOut);\n        refs.btnSignIn.removeEventListener('click', onbtnSignInClick);\n        refs.body.classList.remove('scroll-hidden');\n      } else {\n        refs.boxUser.innerHTML = `<p class=\"user__name\">Hello Stranger</p>`;\n        refs.navigation.innerHTML = ``;\n        refs.btnSignIn.classList.remove('visually-hidden');\n        refs.btnLogOut.classList.add('visually-hidden');\n        refs.btnLogOut.removeEventListener('click', logOut);\n        refs.btnSignIn.addEventListener('click', onbtnSignInClick);\n      }\n    });\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\nmonitorAuthState();\n\n// on btn SignIn Click =====================================================================================\n\nconst onbtnSignInClick = e => {\n  event.preventDefault();\n  refs.backdrop.classList.remove('backdrop--hidden');\n  refs.btnGoogleLogin.addEventListener('click', onBtnGoogleLoginClick);\n  refs.btnLoginWithEmail.addEventListener('click', onbtnLoginWithEmailClick);\n  refs.btnSignUpWithEmail.addEventListener('click', onBtnSignUpWithEmailClick);\n  refs.body.classList.add('scroll-hidden');\n  closeModalFunc();\n};\n\nconst logOut = async () => {\n  await signOut(auth);\n  document.location.href = 'index.html';\n};\n\n// show Login Error =====================================================================================\n\nconst showLoginError = error => {\n  if (error.message == 'Firebase: Error (auth/wrong-password).') {\n    alert('Wrong password, Try again');\n  }\n  if (error.message == 'Firebase: Error (auth/invalid-email).') {\n    alert(`Invalid email, Try again`);\n  } else {\n    alert(`${error.message}`);\n  }\n};\n\n// create Account  =====================================================================================\n\nconst onBtnSignUpWithEmailClick = () => {\n  refs.btnGoogleLogin.removeEventListener('click', onBtnGoogleLoginClick);\n  refs.btnLoginWithEmail.removeEventListener('click', onbtnLoginWithEmailClick);\n  refs.btnLoginEmail.removeEventListener('click', loginEmailPasspord);\n  refs.btnSignUpEmail.addEventListener('click', createAccount);\n  refs.boxSignUpWithEmail.classList.remove('visually-hidden');\n  refs.boxSignInModal.classList.add('visually-hidden');\n};\n\nconst createAccount = async e => {\n  e.preventDefault();\n  const email = refs.signUpEmail.value;\n  const password = refs.signUpPassword.value;\n\n  if (email && password) {\n    refs.backdrop.classList.add('backdrop--hidden');\n    refs.boxSignUpWithEmail.classList.add('visually-hidden');\n    refs.boxSignInModal.classList.remove('visually-hidden');\n  }\n\n  try {\n    const userCredential = await createUserWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n\n    user = userCredential.user;\n\n    writeUserData(user.uid, user.displayName, user.email, user.photoURL);\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\n// sign In With Email And Password auth =====================================================================================\n\nconst onbtnLoginWithEmailClick = () => {\n  refs.btnGoogleLogin.removeEventListener('click', onBtnGoogleLoginClick);\n  refs.btnLoginWithEmail.removeEventListener('click', onbtnLoginWithEmailClick);\n  refs.btnLoginEmail.addEventListener('click', loginEmailPasspord);\n  refs.boxSignInWithEmailModal.classList.remove('visually-hidden');\n  refs.boxSignInModal.classList.add('visually-hidden');\n};\n\nconst loginEmailPasspord = async e => {\n  e.preventDefault();\n  const email = refs.loginEmail.value;\n  const password = refs.loginPassword.value;\n\n  if (email && password) {\n    refs.backdrop.classList.add('backdrop--hidden');\n    refs.boxSignInWithEmailModal.classList.add('visually-hidden');\n    refs.boxSignInModal.classList.remove('visually-hidden');\n  }\n\n  try {\n    const userCredential = await signInWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\n// google auth =====================================================================================\n\nconst provider = new GoogleAuthProvider();\n\nprovider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n\nprovider.setCustomParameters({\n  login_hint: 'user@example.com',\n});\n\nexport const onBtnGoogleLoginClick = e => {\n  e.preventDefault();\n  signInWithPopup(auth, provider)\n    .then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      // ...\n\n      get(child(dbRef, `users/${user.uid}`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            // console.log(snapshot.val());\n          } else {\n            writeUserData(\n              user.uid,\n              user.displayName,\n              user.email,\n              user.photoURL\n            );\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    })\n    .catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error.customData.email;\n      // The AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      // ...\n    });\n};\n\n// data base =================================================================================\n\n// add User in DB ============================================================================\n\nfunction writeUserData(userId, name, email, imageUrl) {\n  set(ref(db, 'users/' + userId), {\n    username: name,\n    email: email,\n    profile_picture: imageUrl,\n  });\n}\n\n// add to watched ============================================================================\n\nexport const onAddToWatchedBtnClick = async filmId => {\n  try {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        AddToWatched(user.uid, filmId);\n      } else {\n        console.log('no user');\n      }\n    });\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\nfunction AddToWatched(uid, filmId) {\n  get(child(dbRef, `users/${uid}/watched`))\n    .then(snapshot => {\n      if (snapshot.exists()) {\n        const amount = Array.from(snapshot.val()).length;\n        const postData = { [amount]: filmId };\n        update(child(dbRef, `users/${uid}/watched`), postData);\n      } else {\n        const postData = { watched: { 0: filmId } };\n        update(child(dbRef, `users/${uid}`), postData);\n      }\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\n// remove from watched ============================================================================\n\nexport const onRemoveFromWatchedBtnClick = async filmId => {\n  try {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        removeFromWatched(user.uid, filmId);\n      } else {\n        console.log('no user');\n      }\n    });\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\nfunction removeFromWatched(uid, filmId) {\n  get(child(dbRef, `users/${uid}/watched`))\n    .then(snapshot => {\n      if (snapshot.exists()) {\n        const Data = Object.values(snapshot.val()).filter(\n          item => item !== filmId\n        );\n        let postData = { watched: Object.assign({}, Data) };\n        update(child(dbRef, `users/${uid}`), postData);\n      } else {\n        // const postData = { watched: { [filmId]: filmName } };\n        // update(child(dbRef, `users/${uid}`), postData);\n      }\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\n// add to queue ============================================================================\n\nexport const onAddToQueueBtnClick = async filmId => {\n  try {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        addToQueue(user.uid, filmId);\n      } else {\n        console.log('no user');\n      }\n    });\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\nfunction addToQueue(uid, filmId) {\n  get(child(dbRef, `users/${uid}/queue`))\n    .then(snapshot => {\n      if (snapshot.exists()) {\n        const amount = Array.from(snapshot.val()).length;\n        const postData = { [amount]: filmId };\n        update(child(dbRef, `users/${uid}/queue`), postData);\n      } else {\n        const postData = { queue: { 0: filmId } };\n        update(child(dbRef, `users/${uid}`), postData);\n      }\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\n// remove from queue ============================================================================\n\nexport const onRemoveFromQueueBtnClick = async filmId => {\n  try {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        removeFromQueue(user.uid, filmId);\n      } else {\n        console.log('no user');\n      }\n    });\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\nfunction removeFromQueue(uid, filmId) {\n  get(child(dbRef, `users/${uid}/queue`))\n    .then(snapshot => {\n      if (snapshot.exists()) {\n        const Data = Object.values(snapshot.val()).filter(\n          item => item !== filmId\n        );\n\n        let postData = { queue: Object.assign({}, Data) };\n\n        update(child(dbRef, `users/${uid}`), postData);\n      }\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n"],"names":["$i6cgS","parcelRequire","$gKkQl","$d6fbf6e688630579$var$firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","$d6fbf6e688630579$export$73693bad9f5880b0","$eyjy7","getAuth","$d6fbf6e688630579$var$db","$jAzyG","getDatabase","$d6fbf6e688630579$export$80a8f1833d408a38","ref","$d6fbf6e688630579$var$refs","btnCloseModal","document","querySelector","btnSignIn","btnLogOut","btnLoginWithPhone","btnPhoneLogin","btnGoogleLogin","btnLoginWithEmail","btnLoginEmail","btnSignUpWithEmail","btnSignUpEmail","btnConfirmEmail","backdrop","navigation","boxUser","boxSignInModal","boxSignInWithEmailModal","boxSignUpWithEmail","boxLogInWithPhone","boxRecaptcha","loginEmail","loginPassword","signUpEmail","signUpPassword","loginPhone","loginPhoneCode","modal","userName","formField","formTitle","body","async","onAuthStateChanged","user","displayName","photoURL","innerHTML","email","classList","add","remove","addEventListener","$d6fbf6e688630579$var$logOut","removeEventListener","$d6fbf6e688630579$var$onbtnSignInClick","error","$d6fbf6e688630579$var$showLoginError","$d6fbf6e688630579$var$monitorAuthState","e","event","preventDefault","$d6fbf6e688630579$export$ab7b7ebee37be904","$d6fbf6e688630579$var$onbtnLoginWithEmailClick","$d6fbf6e688630579$var$onBtnSignUpWithEmailClick","window","code","currentTarget","target","contains","signOut","location","href","message","alert","$d6fbf6e688630579$var$loginEmailPasspord","$d6fbf6e688630579$var$createAccount","value","password","userCredential","createUserWithEmailAndPassword","$d6fbf6e688630579$var$writeUserData","uid","signInWithEmailAndPassword","$d6fbf6e688630579$var$provider","GoogleAuthProvider","addScope","setCustomParameters","login_hint","signInWithPopup","then","result","credentialFromResult","accessToken","get","child","snapshot","exists","catch","console","customData","credentialFromError","userId","name","imageUrl","set","username","profile_picture","$9vy3o","smoothscroll","hideScrollUpBtn","$fc8e7c71b3b7ed96$var$btnQueue","$fc8e7c71b3b7ed96$var$btnWatched","$6KYEq","fetchMovieByIdFromStorageWatched","$cRO1V","fetchMovieByIdFromStorageQueue"],"version":3,"file":"my-library.7ce7fd37.js.map"}