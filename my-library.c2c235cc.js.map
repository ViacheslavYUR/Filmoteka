{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,wBCAAA,EAAA,S,8BCAAC,EAAAD,EAAA,S,aAKA,MAAME,EAAUC,SAASC,cAAc,YAEjCC,EAAsBC,MAAMC,IAChC,IAGE,MAAMC,OAAEA,SAAiB,EAAAC,EAAAC,eAEzBT,EAAAU,QAAQC,YACRV,EAAQW,mBACN,aACA,EAAyBN,EAAMC,IAEjCP,EAAAU,QAAQG,Q,CACR,MAAOC,GACPC,QAAQD,MAAMA,EAAME,Q,GAIlB,EAAyB,CAAGV,EAAKC,IACtB,6DAEWD,EAAKW,6FAEbX,EAAKY,iGAEuCC,EAC5Cb,EAAKc,uFAEiDC,EAClDd,QACKD,EAAKgB,aAAaC,MAAM,EAAG,gDAOlDJ,EAAaC,IACjB,GAAIA,EAAMI,OAAS,GAAI,CAErB,OADoBJ,EAAMG,MAAM,EAAG,IAAM,K,CAGzC,OAAOH,CAAK,EAIVC,EAAad,IACjB,IAAIkB,EAAgB,GAEpB,IAAK,IAAIC,KAASnB,EAChBkB,EAAcE,KAAKD,EAAME,MAG3B,QAAQ,GACN,KAAKH,EAAcD,OAAS,EAC1B,MAAO,GAAGC,EAAc,OAAOA,EAAc,eAE/C,KAA8B,IAAzBA,EAAcD,OACjB,MAAO,GAAGC,EAAc,OAAOA,EAAc,KAE/C,KAA8B,IAAzBA,EAAcD,OACjB,MAAO,GAAGC,EAAc,K,6CDhD9B,MAAMI,EAAW3B,SAASC,cAAc,qBAClC2B,EAAa5B,SAASC,cAAc,uBACpC4B,EAAU7B,SAASC,cAAc,YASvCE,eAAe2B,IACbH,EAASI,UAAUpB,OAAO,eAC1BiB,EAAWG,UAAUC,IAAI,eAMzBH,EAAQI,UAAY,IAEpB,EAAAC,EAAAC,oBAAmBC,EAAAC,MAAMC,IACnBA,GACF,EAAAC,EAAAC,MAAI,EAAAD,EAAAE,OAAML,EAAAM,MAAO,SAASJ,EAAKK,gBAC5BC,MAAKC,IACJ,GAAIA,EAASC,SAAU,CACDC,OAAOC,OAAOH,EAASI,OAC/BC,SAAQC,IAClBC,EAAAC,QACGb,IACC,sCAAsCW,6DAEvCP,MAAK,EAACxC,KAAEA,KAAWF,EAAoBE,IAAM,G,MAIlDkD,EAAAC,OAAOC,KACL,8BACA,8BACD,IAGJC,OAAM7C,IACLC,QAAQD,MAAMA,EAAM,IAGxBC,QAAQ6C,IAAI,UAAU,G,CAvC5B9B,EAAW+B,iBAAiB,QAAS7B,GA4CrCA,IEtEAsB,EAAAvD,EAAA,SCAAC,EAAAD,EAAA,S,aAKA,MAAM+D,EAAU5D,SAASC,cAAc,YAEjC4D,EAAoB1D,MAAMC,IAC9B,IAGE,MAAMC,OAAEA,SAAiB,EAAAC,EAAAC,eAEzBT,EAAAU,QAAQC,YACRmD,EAAQlD,mBACN,aACA,EAAuBN,EAAMC,IAE/BP,EAAAU,QAAQG,Q,CACR,MAAOC,GACPC,QAAQD,MAAMA,EAAME,Q,GAIlB,EAAuB,CAAGV,EAAKC,IACpB,6DAEWD,EAAKW,6FAEbX,EAAKY,iGAEuC8C,EAC5C1D,EAAKc,uFAEiD6C,EAClD1D,QACKD,EAAKgB,aAAaC,MAAM,EAAG,gDAOlDyC,EAAa5C,IACjB,GAAIA,EAAMI,OAAS,GAAI,CAErB,OADoBJ,EAAMG,MAAM,EAAG,IAAM,K,CAGzC,OAAOH,CAAK,EAIV6C,EAAa1D,IACjB,IAAIkB,EAAgB,GAEpB,IAAK,IAAIC,KAASnB,EAChBkB,EAAcE,KAAKD,EAAME,MAG3B,QAAQ,GACN,KAAKH,EAAcD,OAAS,EAC1B,MAAO,GAAGC,EAAc,OAAOA,EAAc,eAE/C,KAA8B,IAAzBA,EAAcD,OACjB,MAAO,GAAGC,EAAc,OAAOA,EAAc,KAE/C,KAA8B,IAAzBA,EAAcD,OACjB,MAAO,GAAGC,EAAc,K,sDD/C9B,MAAMyC,EAAWhE,SAASC,cAAc,qBAClCgE,EAAajE,SAASC,cAAc,uBACpCiE,EAAUlE,SAASC,cAAc,YAIvC+D,EAASL,iBAAiB,SAE1BxD,iBACE8D,EAAWlC,UAAUpB,OAAO,eAC5BqD,EAASjC,UAAUC,IAAI,eAEvBkC,EAAQjC,UAAY,IAEpB,EAAAC,EAAAC,oBAAmBC,EAAAC,MAAMC,IACnBA,GACF,EAAAC,EAAAC,MAAI,EAAAD,EAAAE,OAAML,EAAAM,MAAO,SAASJ,EAAKK,cAC5BC,MAAKC,IACJ,GAAIA,EAASC,SAAU,CACDC,OAAOC,OAAOH,EAASI,OAC/BC,SAAQC,IAClBC,EAAAC,QACGb,IACC,sCAAsCW,6DAEvCP,MAAK,EAACxC,KAAEA,KAAWyD,EAAkBzD,IAAM,G,MAGhDkD,EAAAC,OAAOC,KACL,8BACA,8BACD,IAGJC,OAAM7C,IACLC,QAAQD,MAAMA,EAAM,IAGxBC,QAAQ6C,IAAI,UAAU,G,4DH3C5B,EAAAS,EAAAC,gBACAC,OAAOV,iBAAiB,SAAU/D,EAAA0E","sources":["src/my-library.js","src/js/fromStorage/fetchWatchedFromStorage.js","src/js/fromStorage/renderWatchedMarkup.js","src/js/fromStorage/fetchMovieByIdFromStorageQueue.js","src/js/fromStorage/renderQueueMarkup.js"],"sourcesContent":["import { hideScrollUpBtn } from './js/hide-scroll-up-button';\nimport { smoothscroll } from './js/smoothscroll';\n// import { renderMarkup } from './js/showTrending/renderTrending';\nimport { hiddenElementsOnMobileVersion } from './js/hideElementsInMobileVersion';\nimport { fetchMovieByIdFromStorageWatched } from './js/fromStorage/fetchWatchedFromStorage';\nimport { fetchMovieByIdFromStorageQueue } from './js/fromStorage/fetchMovieByIdFromStorageQueue';\n// import storage from './js/storage';\n\n// import './js/pagination/pagination';\nimport './js/modalTeam/renderTeam';\nimport './js/modalTeam/teamModal';\nimport './js/vanilla';\nimport './js/modal';\nimport './js/firebase';\n\nsmoothscroll();\nwindow.addEventListener('scroll', hideScrollUpBtn);\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport axios from 'axios';\nimport { renderWatchedMarkup } from './renderWatchedMarkup';\nimport { auth, dbRef } from '../firebase';\nimport {\n  getDatabase,\n  ref,\n  set,\n  onValue,\n  child,\n  get,\n  push,\n  update,\n} from 'firebase/database';\n\nimport { onAuthStateChanged } from 'firebase/auth';\n\n// const myLibrLink = document.querySelector('.header-nav_libr');\nconst btnQueue = document.querySelector('.header_btn-queue');\nconst btnWatched = document.querySelector('.header_btn-watched');\nconst gallery = document.querySelector('.gallery');\n\nconst API_KEY = 'ac91775ba29254b7e75060011bf34a90';\n\n// myLibrLink.addEventListener('click', fetchMovieByIdFromStorageWatched);\nbtnWatched.addEventListener('click', fetchMovieByIdFromStorageWatched);\n\nexport { fetchMovieByIdFromStorageWatched };\n\nasync function fetchMovieByIdFromStorageWatched() {\n  btnQueue.classList.remove('current-btn');\n  btnWatched.classList.add('current-btn');\n\n  // const savedMovies = await JSON.parse(getWatched());\n  // const parsedMovies = JSON.parse(savedMovies);\n  // console.log(parsedMovies);\n\n  gallery.innerHTML = '';\n\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      get(child(dbRef, `users/${user.uid}/watched`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            const savedMovies = Object.values(snapshot.val());\n            savedMovies.forEach(element => {\n              axios\n                .get(\n                  `https://api.themoviedb.org/3/movie/${element}?api_key=${API_KEY}&language=en-US`\n                )\n                .then(({ data }) => renderWatchedMarkup(data));\n            });\n          } else {\n            // console.log('No data available');\n            Report.info(\n              'No movies in collection now',\n              'Add movies to see them here'\n            );\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      console.log('no user');\n    }\n  });\n}\n\nfetchMovieByIdFromStorageWatched();\n//\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { fetchGenres } from '../fetchGenres';\n\nexport { renderWatchedMarkup };\n\nconst gallery = document.querySelector('.gallery');\n\nconst renderWatchedMarkup = async data => {\n  try {\n    // const data = await fetchMovieByIdFromStorageWatched();\n    // console.log(data);\n    const { genres } = await fetchGenres();\n    // console.log(genres);\n    Loading.hourglass();\n    gallery.insertAdjacentHTML(\n      'afterbegin',\n      watchedGalleryMarkupСreat(data, genres)\n    );\n    Loading.remove();\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nconst watchedGalleryMarkupСreat = (data, genres) => {\n  const markup = `\n      <li class=\"movieCard\">\n              <a data-id=\"${data.id}\">\n                  <img class=\"movieCard__image\" src=\"https://image.tmdb.org/t/p/w500${\n                    data.poster_path\n                  }\" alt=\"movieImg\" />\n                  <p class=\"movieCard__info movieCard__title\">${titleSlice(\n                    data.title\n                  )}</p>\n                      <p class=\"movieCard__info movieCard__description\">${cardGenres(\n                        genres\n                      )} | ${data.release_date.slice(0, 4)}</p>\n              </a>\n      </li>\n    `;\n  return markup;\n};\n\nconst titleSlice = title => {\n  if (title.length > 30) {\n    const titleSliced = title.slice(0, 30) + '...';\n    return titleSliced;\n  } else {\n    return title;\n  }\n};\n\nconst cardGenres = genres => {\n  let cardGenresArr = [];\n\n  for (let genre of genres) {\n    cardGenresArr.push(genre.name);\n  }\n\n  switch (true) {\n    case cardGenresArr.length > 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}, other...`;\n\n    case cardGenresArr.length === 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}`;\n\n    case cardGenresArr.length === 1:\n      return `${cardGenresArr[0]}`;\n\n    default:\n      break;\n  }\n};\n\n// renderWatchedMarkup();\n","import axios from 'axios';\nimport { renderQueueMarkup } from './renderQueueMarkup';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nimport { auth, dbRef } from '../firebase';\nimport {\n  getDatabase,\n  ref,\n  set,\n  onValue,\n  child,\n  get,\n  push,\n  update,\n} from 'firebase/database';\n\nimport { onAuthStateChanged } from 'firebase/auth';\n\nexport { fetchMovieByIdFromStorageQueue };\n\nconst btnQueue = document.querySelector('.header_btn-queue');\nconst btnWatched = document.querySelector('.header_btn-watched');\nconst gallery = document.querySelector('.gallery');\n\nconst API_KEY = 'ac91775ba29254b7e75060011bf34a90';\n\nbtnQueue.addEventListener('click', fetchMovieByIdFromStorageQueue);\n\nasync function fetchMovieByIdFromStorageQueue() {\n  btnWatched.classList.remove('current-btn');\n  btnQueue.classList.add('current-btn');\n\n  gallery.innerHTML = '';\n\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      get(child(dbRef, `users/${user.uid}/queue`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            const savedMovies = Object.values(snapshot.val());\n            savedMovies.forEach(element => {\n              axios\n                .get(\n                  `https://api.themoviedb.org/3/movie/${element}?api_key=${API_KEY}&language=en-US`\n                )\n                .then(({ data }) => renderQueueMarkup(data));\n            });\n          } else {\n            Report.info(\n              'No movies in collection now',\n              'Add movies to see them here'\n            );\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      console.log('no user');\n    }\n  });\n}\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { fetchGenres } from '../fetchGenres';\n\nexport { renderQueueMarkup };\n\nconst gallery = document.querySelector('.gallery');\n\nconst renderQueueMarkup = async data => {\n  try {\n    // const data = await fetchMovieByIdFromStorageWatched();\n    // console.log(data);\n    const { genres } = await fetchGenres();\n    // console.log(genres);\n    Loading.hourglass();\n    gallery.insertAdjacentHTML(\n      'afterbegin',\n      queueGalleryMarkupСreat(data, genres)\n    );\n    Loading.remove();\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nconst queueGalleryMarkupСreat = (data, genres) => {\n  const markup = `\n      <li class=\"movieCard\">\n              <a data-id=\"${data.id}\">\n                  <img class=\"movieCard__image\" src=\"https://image.tmdb.org/t/p/w500${\n                    data.poster_path\n                  }\" alt=\"movieImg\" />\n                  <p class=\"movieCard__info movieCard__title\">${titleSlice(\n                    data.title\n                  )}</p>\n                      <p class=\"movieCard__info movieCard__description\">${cardGenres(\n                        genres\n                      )} | ${data.release_date.slice(0, 4)}</p>\n              </a>\n      </li>\n    `;\n  return markup;\n};\n\nconst titleSlice = title => {\n  if (title.length > 30) {\n    const titleSliced = title.slice(0, 30) + '...';\n    return titleSliced;\n  } else {\n    return title;\n  }\n};\n\nconst cardGenres = genres => {\n  let cardGenresArr = [];\n\n  for (let genre of genres) {\n    cardGenresArr.push(genre.name);\n  }\n\n  switch (true) {\n    case cardGenresArr.length > 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}, other...`;\n\n    case cardGenresArr.length === 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}`;\n\n    case cardGenresArr.length === 1:\n      return `${cardGenresArr[0]}`;\n\n    default:\n      break;\n  }\n};\n"],"names":["$i6cgS","parcelRequire","$dSs1Y","$782e3676ee977fac$var$gallery","document","querySelector","$782e3676ee977fac$export$1fbb1e823a6c5950","async","data","genres","$7zQK0","fetchGenres","Loading","hourglass","insertAdjacentHTML","remove","error","console","message","id","poster_path","$782e3676ee977fac$var$titleSlice","title","$782e3676ee977fac$var$cardGenres","release_date","slice","length","cardGenresArr","genre","push","name","$4eb615f5a9c539be$var$btnQueue","$4eb615f5a9c539be$var$btnWatched","$4eb615f5a9c539be$var$gallery","$4eb615f5a9c539be$export$76db5913f35af0d5","classList","add","innerHTML","$eyjy7","onAuthStateChanged","$2ix2C","auth","user","$jAzyG","get","child","dbRef","uid","then","snapshot","exists","Object","values","val","forEach","element","$2shzp","default","$i37YJ","Report","info","catch","log","addEventListener","$53f0cb851e2948b8$var$gallery","$53f0cb851e2948b8$export$3a5aa6f3e56312e1","$53f0cb851e2948b8$var$titleSlice","$53f0cb851e2948b8$var$cardGenres","$95e13e32d75abbaf$var$btnQueue","$95e13e32d75abbaf$var$btnWatched","$95e13e32d75abbaf$var$gallery","$9vy3o","smoothscroll","window","hideScrollUpBtn"],"version":3,"file":"my-library.c2c235cc.js.map"}