{"mappings":"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","sources":["src/my-library.js","src/js/fromStorage/fetchWatchedFromStorage.js","src/js/fromStorage/renderWatchedMarkup.js","src/js/fromStorage/fetchMovieByIdFromStorageQueue.js","src/js/fromStorage/renderQueueMarkup.js","src/js/firebase-library.js"],"sourcesContent":["import { hideScrollUpBtn } from './js/hide-scroll-up-button';\nimport { smoothscroll } from './js/smoothscroll';\n// import { renderMarkup } from './js/showTrending/renderTrending';\nimport { hiddenElementsOnMobileVersion } from './js/hideElementsInMobileVersion';\nimport { fetchMovieByIdFromStorageWatched } from './js/fromStorage/fetchWatchedFromStorage';\nimport { fetchMovieByIdFromStorageQueue } from './js/fromStorage/fetchMovieByIdFromStorageQueue';\n// import storage from './js/storage';\n\n// import './js/pagination/pagination';\nimport './js/modalTeam/renderTeam';\nimport './js/modalTeam/teamModal';\nimport './js/vanilla';\nimport './js/modal';\nimport './js/firebase-library';\n\nsmoothscroll();\nwindow.addEventListener('scroll', hideScrollUpBtn);\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport axios from 'axios';\nimport { renderWatchedMarkup } from './renderWatchedMarkup';\nimport { auth, dbRef } from '../firebase';\nimport {\n  getDatabase,\n  ref,\n  set,\n  onValue,\n  child,\n  get,\n  push,\n  update,\n} from 'firebase/database';\n\nimport { onAuthStateChanged } from 'firebase/auth';\n\n// const myLibrLink = document.querySelector('.header-nav_libr');\nconst btnQueue = document.querySelector('.header_btn-queue');\nconst btnWatched = document.querySelector('.header_btn-watched');\nconst gallery = document.querySelector('.gallery');\n\nconst API_KEY = 'ac91775ba29254b7e75060011bf34a90';\n\n// myLibrLink.addEventListener('click', fetchMovieByIdFromStorageWatched);\nbtnWatched.addEventListener('click', fetchMovieByIdFromStorageWatched);\n\nexport { fetchMovieByIdFromStorageWatched };\n\nasync function fetchMovieByIdFromStorageWatched() {\n  btnQueue.classList.remove('current-btn');\n  btnWatched.classList.add('current-btn');\n\n  // const savedMovies = await JSON.parse(getWatched());\n  // const parsedMovies = JSON.parse(savedMovies);\n  // console.log(parsedMovies);\n\n  gallery.innerHTML = '';\n\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      get(child(dbRef, `users/${user.uid}/watched`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            const savedMovies = Object.values(snapshot.val());\n            savedMovies.forEach(element => {\n              axios\n                .get(\n                  `https://api.themoviedb.org/3/movie/${element}?api_key=${API_KEY}&language=en-US`\n                )\n                .then(({ data }) => renderWatchedMarkup(data));\n            });\n          } else {\n            // console.log('No data available');\n            Report.info(\n              'No movies in collection now',\n              'Add movies to see them here'\n            );\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      console.log('no user');\n    }\n  });\n}\n\nfetchMovieByIdFromStorageWatched();\n//\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { fetchGenres } from '../fetchGenres';\n\nexport { renderWatchedMarkup };\n\nconst gallery = document.querySelector('.gallery');\n\nconst renderWatchedMarkup = async data => {\n  try {\n    // const data = await fetchMovieByIdFromStorageWatched();\n    // console.log(data);\n    const { genres } = await fetchGenres();\n    // console.log(genres);\n    Loading.hourglass();\n    gallery.insertAdjacentHTML(\n      'afterbegin',\n      watchedGalleryMarkupСreat(data, genres)\n    );\n    Loading.remove();\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nconst watchedGalleryMarkupСreat = (data, genres) => {\n  const markup = `\n      <li class=\"movieCard\">\n              <a data-id=\"${data.id}\">\n                  <img class=\"movieCard__image\" src=\"https://image.tmdb.org/t/p/w500${\n                    data.poster_path\n                  }\" alt=\"movieImg\" />\n                  <p class=\"movieCard__info movieCard__title\">${titleSlice(\n                    data.title\n                  )}</p>\n                      <p class=\"movieCard__info movieCard__description\">${cardGenres(\n                        genres\n                      )} | ${data.release_date.slice(0, 4)}</p>\n              </a>\n      </li>\n    `;\n  return markup;\n};\n\nconst titleSlice = title => {\n  if (title.length > 30) {\n    const titleSliced = title.slice(0, 30) + '...';\n    return titleSliced;\n  } else {\n    return title;\n  }\n};\n\nconst cardGenres = genres => {\n  let cardGenresArr = [];\n\n  for (let genre of genres) {\n    cardGenresArr.push(genre.name);\n  }\n\n  switch (true) {\n    case cardGenresArr.length > 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}, other...`;\n\n    case cardGenresArr.length === 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}`;\n\n    case cardGenresArr.length === 1:\n      return `${cardGenresArr[0]}`;\n\n    default:\n      break;\n  }\n};\n\n// renderWatchedMarkup();\n","import axios from 'axios';\nimport { renderQueueMarkup } from './renderQueueMarkup';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nimport { auth, dbRef } from '../firebase';\nimport {\n  getDatabase,\n  ref,\n  set,\n  onValue,\n  child,\n  get,\n  push,\n  update,\n} from 'firebase/database';\n\nimport { onAuthStateChanged } from 'firebase/auth';\n\nexport { fetchMovieByIdFromStorageQueue };\n\nconst btnQueue = document.querySelector('.header_btn-queue');\nconst btnWatched = document.querySelector('.header_btn-watched');\nconst gallery = document.querySelector('.gallery');\n\nconst API_KEY = 'ac91775ba29254b7e75060011bf34a90';\n\nbtnQueue.addEventListener('click', fetchMovieByIdFromStorageQueue);\n\nasync function fetchMovieByIdFromStorageQueue() {\n  btnWatched.classList.remove('current-btn');\n  btnQueue.classList.add('current-btn');\n\n  gallery.innerHTML = '';\n\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      get(child(dbRef, `users/${user.uid}/queue`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            const savedMovies = Object.values(snapshot.val());\n            savedMovies.forEach(element => {\n              axios\n                .get(\n                  `https://api.themoviedb.org/3/movie/${element}?api_key=${API_KEY}&language=en-US`\n                )\n                .then(({ data }) => renderQueueMarkup(data));\n            });\n          } else {\n            Report.info(\n              'No movies in collection now',\n              'Add movies to see them here'\n            );\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      console.log('no user');\n    }\n  });\n}\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { fetchGenres } from '../fetchGenres';\n\nexport { renderQueueMarkup };\n\nconst gallery = document.querySelector('.gallery');\n\nconst renderQueueMarkup = async data => {\n  try {\n    // const data = await fetchMovieByIdFromStorageWatched();\n    // console.log(data);\n    const { genres } = await fetchGenres();\n    // console.log(genres);\n    Loading.hourglass();\n    gallery.insertAdjacentHTML(\n      'afterbegin',\n      queueGalleryMarkupСreat(data, genres)\n    );\n    Loading.remove();\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nconst queueGalleryMarkupСreat = (data, genres) => {\n  const markup = `\n      <li class=\"movieCard\">\n              <a data-id=\"${data.id}\">\n                  <img class=\"movieCard__image\" src=\"https://image.tmdb.org/t/p/w500${\n                    data.poster_path\n                  }\" alt=\"movieImg\" />\n                  <p class=\"movieCard__info movieCard__title\">${titleSlice(\n                    data.title\n                  )}</p>\n                      <p class=\"movieCard__info movieCard__description\">${cardGenres(\n                        genres\n                      )} | ${data.release_date.slice(0, 4)}</p>\n              </a>\n      </li>\n    `;\n  return markup;\n};\n\nconst titleSlice = title => {\n  if (title.length > 30) {\n    const titleSliced = title.slice(0, 30) + '...';\n    return titleSliced;\n  } else {\n    return title;\n  }\n};\n\nconst cardGenres = genres => {\n  let cardGenresArr = [];\n\n  for (let genre of genres) {\n    cardGenresArr.push(genre.name);\n  }\n\n  switch (true) {\n    case cardGenresArr.length > 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}, other...`;\n\n    case cardGenresArr.length === 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}`;\n\n    case cardGenresArr.length === 1:\n      return `${cardGenresArr[0]}`;\n\n    default:\n      break;\n  }\n};\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\n\nimport { onBackdropClick, onEscKeyPress } from './modal';\n\nimport {\n  getAuth,\n  onAuthStateChanged,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  signOut,\n  signInWithPopup,\n  GoogleAuthProvider,\n  sendEmailVerification,\n  // signInWithRedirect,\n  RecaptchaVerifier,\n  signInWithPhoneNumber,\n  // connectAuthEmulator,\n} from 'firebase/auth';\n\nimport {\n  getDatabase,\n  ref,\n  set,\n  onValue,\n  child,\n  get,\n  push,\n  update,\n} from 'firebase/database';\n\n// Initialize Firebase\nconst firebaseApp = initializeApp({\n  apiKey: 'AIzaSyCrjIQ-i-DV-fkmDO-FB_HdRZGKiM7ste8',\n  authDomain: 'filmoteka-project9.firebaseapp.com',\n  projectId: 'filmoteka-project9',\n  storageBucket: 'filmoteka-project9.appspot.com',\n  messagingSenderId: '1031272501813',\n  appId: '1:1031272501813:web:a2ca2d3955cbe4cf9a577c',\n  measurementId: 'G-1NQ8JF0W90',\n  databaseURL:\n    'https://filmoteka-project9-default-rtdb.europe-west1.firebasedatabase.app/',\n});\n\nexport const auth = getAuth(firebaseApp);\n\n// Initialize Realtime Database and get a reference to the service\nconst db = getDatabase(firebaseApp);\n\nexport const dbRef = ref(db);\n\n// ================= запуск локального эмулятора =================\n\n//из это папки >>> C:\\Filmoteka\n//запуск хоcтинга >>> firebase serve --only hosting\n//запуск эмулятора >>> firebase emulators:start --only auth\n\n// connectAuthEmulator(auth, 'http://localhost:9099/');\n\n// ============================================================================\n\nconst refs = {\n  btnCloseModal: document.querySelector('[data-signInModal-close]'),\n  btnSignIn: document.querySelector('#signInModalOpen'),\n  btnLogOut: document.querySelector('#logoutBtn'),\n  btnLoginWithPhone: document.querySelector('#LogInWithPhoneBtn'),\n  btnPhoneLogin: document.querySelector('#LogInPhone'),\n  btnGoogleLogin: document.querySelector('#googleLoginBtn'),\n  btnLoginWithEmail: document.querySelector('#loginWithEmailBtn'),\n  btnLoginEmail: document.querySelector('#loginEmailBtn'),\n  btnSignUpWithEmail: document.querySelector('#SignUpWitnEmailBtn'),\n  btnSignUpEmail: document.querySelector('#SignUpBtn'),\n  btnConfirmEmail: document.querySelector('#ConfirmEmail'),\n\n  backdrop: document.querySelector('[data-signInModal]'),\n  navigation: document.querySelector('.navigation__list'),\n  boxUser: document.querySelector('.user__box'),\n  boxSignInModal: document.querySelector('.signInModal__box'),\n  boxSignInWithEmailModal: document.querySelector(\n    '.signInModal__signInWithEmail'\n  ),\n  boxSignUpWithEmail: document.querySelector('.signInModal__signUpWithEmail'),\n  boxLogInWithPhone: document.querySelector('.signInModal__LogInWithPhone'),\n  boxRecaptcha: document.querySelector('.recaptcha-container'),\n\n  loginEmail: document.querySelector('#email'),\n  loginPassword: document.querySelector('#password'),\n  signUpEmail: document.querySelector('#emailSignUp'),\n  signUpPassword: document.querySelector('#passwordSignUp'),\n  loginPhone: document.querySelector('#phone'),\n  loginPhoneCode: document.querySelector('#loginPhoneCode'),\n  modal: document.querySelector('[data-signInModal]'),\n  userName: document.querySelector('.user__name'),\n  formField: document.querySelector('.auth-form__field'),\n  formTitle: document.querySelector('.auth-form__title'),\n  body: document.querySelector('body'),\n};\n\n// close Modal Func auth =====================================================================================\n\nconst closeModalFunc = () => {\n  refs.btnCloseModal.addEventListener('click', () => {\n    refs.backdrop.classList.add('backdrop--hidden');\n    refs.body.classList.remove('scroll-hidden');\n  });\n\n  window.addEventListener('keydown', e => {\n    const ESC_KEY_CODE = 'Escape';\n    const isEscKey = e.code === ESC_KEY_CODE;\n    if (isEscKey) {\n      refs.backdrop.classList.add('backdrop--hidden');\n      refs.body.classList.remove('scroll-hidden');\n    }\n  });\n\n  refs.backdrop.addEventListener('click', e => {\n    if (event.currentTarget === event.target) {\n      refs.backdrop.classList.add('backdrop--hidden');\n      refs.body.classList.remove('scroll-hidden');\n    }\n  });\n\n  if (refs.backdrop.classList.contains('backdrop--hidden')) {\n    refs.btnCloseModal.removeEventListener('click', () => {\n      refs.backdrop.classList.add('backdrop--hidden');\n      refs.body.classList.remove('scroll-hidden');\n    });\n\n    window.removeEventListener('keydown', e => {\n      const ESC_KEY_CODE = 'Escape';\n      const isEscKey = e.code === ESC_KEY_CODE;\n      if (isEscKey) {\n        refs.backdrop.classList.add('backdrop--hidden');\n        refs.body.classList.remove('scroll-hidden');\n      }\n    });\n\n    refs.backdrop.removeEventListener('click', e => {\n      if (event.currentTarget === event.target) {\n        refs.backdrop.classList.add('backdrop--hidden');\n        refs.body.classList.remove('scroll-hidden');\n      }\n    });\n  }\n};\n\n// monitor Auth State =====================================================================================\n\nconst monitorAuthState = async () => {\n  try {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        // console.log(user);\n\n        switch (true) {\n          case user.displayName !== null && user.photoURL !== null:\n            refs.boxUser.innerHTML = `<img class=\"user__img\" src= ${user.photoURL} alt=\"\" />\n                                  <div class=\"user__info\"><p class=\"user__greeting\">Good to see You again</p>\n                                  <p class=\"user__name\"> ${user.displayName}</p></div>`;\n            break;\n\n          case user.displayName === null && user.photoURL === null:\n            refs.boxUser.innerHTML = `<p class=\"user__greeting\">Good to see You again</p>\n                                  <p class=\"user__name\">Logged in as ${user.email}</p>`;\n            break;\n\n          default:\n            break;\n        }\n        refs.navigation.innerHTML = `<li class=\"navigation__item\">\n          <a class=\"navigation__link \" href=\"./index.html\">HOME</a>\n        </li>\n        <li class=\"navigation__item\">\n          <a class=\"navigation__link navigation__link--current\" href=\"./my-library.html\">MY LIBRARY</a>\n        </li>`;\n\n        refs.btnSignIn.classList.add('visually-hidden');\n        refs.btnLogOut.classList.remove('visually-hidden');\n        refs.backdrop.classList.add('backdrop--hidden');\n        refs.btnLogOut.addEventListener('click', logOut);\n        refs.btnSignIn.removeEventListener('click', onbtnSignInClick);\n        refs.body.classList.remove('scroll-hidden');\n      } else {\n        refs.boxUser.innerHTML = `<p class=\"user__name\">Hello Stranger</p>`;\n        refs.navigation.innerHTML = ``;\n        refs.btnSignIn.classList.remove('visually-hidden');\n        refs.btnLogOut.classList.add('visually-hidden');\n        refs.btnLogOut.removeEventListener('click', logOut);\n        refs.btnSignIn.addEventListener('click', onbtnSignInClick);\n      }\n    });\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\nmonitorAuthState();\n\n// on btn SignIn Click =====================================================================================\n\nconst onbtnSignInClick = e => {\n  event.preventDefault();\n  refs.backdrop.classList.remove('backdrop--hidden');\n  refs.btnGoogleLogin.addEventListener('click', onBtnGoogleLoginClick);\n  refs.btnLoginWithEmail.addEventListener('click', onbtnLoginWithEmailClick);\n  refs.btnSignUpWithEmail.addEventListener('click', onBtnSignUpWithEmailClick);\n  refs.body.classList.add('scroll-hidden');\n  closeModalFunc();\n};\n\nconst logOut = async () => {\n  await signOut(auth);\n  document.location.href = 'index.html';\n};\n\n// show Login Error =====================================================================================\n\nconst showLoginError = error => {\n  if (error.message == 'Firebase: Error (auth/wrong-password).') {\n    alert('Wrong password, Try again');\n  }\n  if (error.message == 'Firebase: Error (auth/invalid-email).') {\n    alert(`Invalid email, Try again`);\n  } else {\n    alert(`${error.message}`);\n  }\n};\n\n// create Account  =====================================================================================\n\nconst onBtnSignUpWithEmailClick = () => {\n  refs.btnGoogleLogin.removeEventListener('click', onBtnGoogleLoginClick);\n  refs.btnLoginWithEmail.removeEventListener('click', onbtnLoginWithEmailClick);\n  refs.btnLoginEmail.removeEventListener('click', loginEmailPasspord);\n  refs.btnSignUpEmail.addEventListener('click', createAccount);\n  refs.boxSignUpWithEmail.classList.remove('visually-hidden');\n  refs.boxSignInModal.classList.add('visually-hidden');\n};\n\nconst createAccount = async e => {\n  e.preventDefault();\n  const email = refs.signUpEmail.value;\n  const password = refs.signUpPassword.value;\n\n  if (email && password) {\n    refs.backdrop.classList.add('backdrop--hidden');\n    refs.boxSignUpWithEmail.classList.add('visually-hidden');\n    refs.boxSignInModal.classList.remove('visually-hidden');\n  }\n\n  try {\n    const userCredential = await createUserWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n\n    user = userCredential.user;\n\n    writeUserData(user.uid, user.displayName, user.email, user.photoURL);\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\n// sign In With Email And Password auth =====================================================================================\n\nconst onbtnLoginWithEmailClick = () => {\n  refs.btnGoogleLogin.removeEventListener('click', onBtnGoogleLoginClick);\n  refs.btnLoginWithEmail.removeEventListener('click', onbtnLoginWithEmailClick);\n  refs.btnLoginEmail.addEventListener('click', loginEmailPasspord);\n  refs.boxSignInWithEmailModal.classList.remove('visually-hidden');\n  refs.boxSignInModal.classList.add('visually-hidden');\n};\n\nconst loginEmailPasspord = async e => {\n  e.preventDefault();\n  const email = refs.loginEmail.value;\n  const password = refs.loginPassword.value;\n\n  if (email && password) {\n    refs.backdrop.classList.add('backdrop--hidden');\n    refs.boxSignInWithEmailModal.classList.add('visually-hidden');\n    refs.boxSignInModal.classList.remove('visually-hidden');\n  }\n\n  try {\n    const userCredential = await signInWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\n// google auth =====================================================================================\n\nconst provider = new GoogleAuthProvider();\n\nprovider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n\nprovider.setCustomParameters({\n  login_hint: 'user@example.com',\n});\n\nexport const onBtnGoogleLoginClick = e => {\n  e.preventDefault();\n  signInWithPopup(auth, provider)\n    .then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      // ...\n\n      get(child(dbRef, `users/${user.uid}`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            // console.log(snapshot.val());\n          } else {\n            writeUserData(\n              user.uid,\n              user.displayName,\n              user.email,\n              user.photoURL\n            );\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    })\n    .catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error.customData.email;\n      // The AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      // ...\n    });\n};\n\n// data base =================================================================================\n\n// add User in DB ============================================================================\n\nfunction writeUserData(userId, name, email, imageUrl) {\n  set(ref(db, 'users/' + userId), {\n    username: name,\n    email: email,\n    profile_picture: imageUrl,\n  });\n}\n\n// add to watched ============================================================================\n\nexport const onAddToWatchedBtnClick = async filmId => {\n  try {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        AddToWatched(user.uid, filmId);\n      } else {\n        console.log('no user');\n      }\n    });\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\nfunction AddToWatched(uid, filmId) {\n  get(child(dbRef, `users/${uid}/watched`))\n    .then(snapshot => {\n      if (snapshot.exists()) {\n        const amount = Array.from(snapshot.val()).length;\n        const postData = { [amount]: filmId };\n        update(child(dbRef, `users/${uid}/watched`), postData);\n      } else {\n        const postData = { watched: { 0: filmId } };\n        update(child(dbRef, `users/${uid}`), postData);\n      }\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\n// remove from watched ============================================================================\n\nexport const onRemoveFromWatchedBtnClick = async filmId => {\n  try {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        removeFromWatched(user.uid, filmId);\n      } else {\n        console.log('no user');\n      }\n    });\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\nfunction removeFromWatched(uid, filmId) {\n  get(child(dbRef, `users/${uid}/watched`))\n    .then(snapshot => {\n      if (snapshot.exists()) {\n        const Data = Object.values(snapshot.val()).filter(\n          item => item !== filmId\n        );\n        let postData = { watched: Object.assign({}, Data) };\n        update(child(dbRef, `users/${uid}`), postData);\n      } else {\n        // const postData = { watched: { [filmId]: filmName } };\n        // update(child(dbRef, `users/${uid}`), postData);\n      }\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\n// add to queue ============================================================================\n\nexport const onAddToQueueBtnClick = async filmId => {\n  try {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        addToQueue(user.uid, filmId);\n      } else {\n        console.log('no user');\n      }\n    });\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\nfunction addToQueue(uid, filmId) {\n  get(child(dbRef, `users/${uid}/queue`))\n    .then(snapshot => {\n      if (snapshot.exists()) {\n        const amount = Array.from(snapshot.val()).length;\n        const postData = { [amount]: filmId };\n        update(child(dbRef, `users/${uid}/queue`), postData);\n      } else {\n        const postData = { queue: { 0: filmId } };\n        update(child(dbRef, `users/${uid}`), postData);\n      }\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\n// remove from queue ============================================================================\n\nexport const onRemoveFromQueueBtnClick = async filmId => {\n  try {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        removeFromQueue(user.uid, filmId);\n      } else {\n        console.log('no user');\n      }\n    });\n  } catch (error) {\n    showLoginError(error);\n  }\n};\n\nfunction removeFromQueue(uid, filmId) {\n  get(child(dbRef, `users/${uid}/queue`))\n    .then(snapshot => {\n      if (snapshot.exists()) {\n        const Data = Object.values(snapshot.val()).filter(\n          item => item !== filmId\n        );\n\n        let postData = { queue: Object.assign({}, Data) };\n\n        update(child(dbRef, `users/${uid}`), postData);\n      }\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n"],"names":["$i6cgS","parcelRequire","$dSs1Y","$782e3676ee977fac$var$gallery","document","querySelector","$782e3676ee977fac$export$1fbb1e823a6c5950","async","data","genres","$7zQK0","fetchGenres","Loading","hourglass","insertAdjacentHTML","remove","error","console","message","id","poster_path","$782e3676ee977fac$var$titleSlice","title","$782e3676ee977fac$var$cardGenres","release_date","slice","length","cardGenresArr","genre","push","name","$4eb615f5a9c539be$var$btnQueue","$4eb615f5a9c539be$var$btnWatched","$4eb615f5a9c539be$var$gallery","$4eb615f5a9c539be$export$76db5913f35af0d5","classList","add","innerHTML","$eyjy7","onAuthStateChanged","$2ix2C","auth","user","$jAzyG","get","child","dbRef","uid","then","snapshot","exists","Object","values","val","forEach","element","$2shzp","default","$i37YJ","Report","info","catch","log","addEventListener","$53f0cb851e2948b8$var$gallery","$53f0cb851e2948b8$export$3a5aa6f3e56312e1","$53f0cb851e2948b8$var$titleSlice","$53f0cb851e2948b8$var$cardGenres","$95e13e32d75abbaf$var$btnQueue","$95e13e32d75abbaf$var$btnWatched","$95e13e32d75abbaf$var$gallery","$gKkQl","$d6fbf6e688630579$var$firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","$d6fbf6e688630579$export$73693bad9f5880b0","getAuth","$d6fbf6e688630579$var$db","getDatabase","$d6fbf6e688630579$export$80a8f1833d408a38","ref","$d6fbf6e688630579$var$refs","btnCloseModal","btnSignIn","btnLogOut","btnLoginWithPhone","btnPhoneLogin","btnGoogleLogin","btnLoginWithEmail","btnLoginEmail","btnSignUpWithEmail","btnSignUpEmail","btnConfirmEmail","backdrop","navigation","boxUser","boxSignInModal","boxSignInWithEmailModal","boxSignUpWithEmail","boxLogInWithPhone","boxRecaptcha","loginEmail","loginPassword","signUpEmail","signUpPassword","loginPhone","loginPhoneCode","modal","userName","formField","formTitle","body","displayName","photoURL","email","$d6fbf6e688630579$var$logOut","removeEventListener","$d6fbf6e688630579$var$onbtnSignInClick","$d6fbf6e688630579$var$showLoginError","$d6fbf6e688630579$var$monitorAuthState","e","event","preventDefault","$d6fbf6e688630579$export$ab7b7ebee37be904","$d6fbf6e688630579$var$onbtnLoginWithEmailClick","$d6fbf6e688630579$var$onBtnSignUpWithEmailClick","window","code","currentTarget","target","contains","signOut","location","href","alert","$d6fbf6e688630579$var$loginEmailPasspord","$d6fbf6e688630579$var$createAccount","value","password","userCredential","createUserWithEmailAndPassword","$d6fbf6e688630579$var$writeUserData","signInWithEmailAndPassword","$d6fbf6e688630579$var$provider","GoogleAuthProvider","addScope","setCustomParameters","login_hint","signInWithPopup","result","credentialFromResult","accessToken","customData","credentialFromError","userId","imageUrl","set","username","profile_picture","$9vy3o","smoothscroll","hideScrollUpBtn"],"version":3,"file":"my-library.acb49757.js.map"}