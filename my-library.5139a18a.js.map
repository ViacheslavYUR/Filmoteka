{"mappings":"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","sources":["src/my-library.js","src/js/fromStorage/fetchWatchedFromStorage.js","src/js/fromStorage/renderWatchedMarkup.js","src/js/fromStorage/fetchMovieByIdFromStorageQueue.js","src/js/fromStorage/renderQueueMarkup.js"],"sourcesContent":["import { hideScrollUpBtn } from './js/hide-scroll-up-button';\nimport { smoothscroll } from './js/smoothscroll';\n// import { renderMarkup } from './js/showTrending/renderTrending';\nimport { hiddenElementsOnMobileVersion } from './js/hideElementsInMobileVersion';\nimport { fetchMovieByIdFromStorageWatched } from './js/fromStorage/fetchWatchedFromStorage';\nimport { fetchMovieByIdFromStorageQueue } from './js/fromStorage/fetchMovieByIdFromStorageQueue';\nimport storage from './js/storage';\n\n// import './js/pagination/pagination';\nimport './js/modalTeam/renderTeam';\nimport './js/modalTeam/teamModal';\nimport './js/modal';\nimport './js/vanilla';\n\nsmoothscroll();\nwindow.addEventListener('scroll', hideScrollUpBtn);\n","import axios from 'axios';\nimport { renderWatchedMarkup } from './renderWatchedMarkup';\n\n// const myLibrLink = document.querySelector('.header-nav_libr');\nconst btnQueue = document.querySelector('.header_btn-queue');\nconst btnWatched = document.querySelector('.header_btn-watched');\nconst gallery = document.querySelector('.gallery');\n\nconst API_KEY = 'ac91775ba29254b7e75060011bf34a90';\n\n// myLibrLink.addEventListener('click', fetchMovieByIdFromStorageWatched);\nbtnWatched.addEventListener('click', fetchMovieByIdFromStorageWatched);\n\nasync function fetchMovieByIdFromStorageWatched() {\n  btnQueue.classList.remove('current-btn');\n  btnWatched.classList.add('current-btn');\n\n  savedMovies = localStorage.getItem('movieID');\n  parsedMovies = JSON.parse(savedMovies);\n  // console.log(parsedMovies);\n\n\n  gallery.innerHTML = '';\n\n  for (let movieId of parsedMovies.watched) {\n    // console.log(\n    //   'fetchMovieByIdFromStorageWatched ~ parsedMovies.watched',\n    //   parsedMovies.watched\n    // );\n    // console.log('Here is your movies ID:', movieId);\n\n    try {\n      const { data } = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n      );\n      // renderWatchedMarkup(data);\n      // console.log(data);\n      renderWatchedMarkup(data);\n      // запускаем функцию один раз, иначе уходит в infinity loop\n      //   fetchMovieByIdFromStorageWatched = function () {\n      //     return false;\n      //   };\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n}\n\nfetchMovieByIdFromStorageWatched();\n//\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { fetchGenres } from '../fetchGenres';\n\nexport { renderWatchedMarkup };\n\nconst gallery = document.querySelector('.gallery');\n\nconst renderWatchedMarkup = async data => {\n  try {\n    // const data = await fetchMovieByIdFromStorageWatched();\n    // console.log(data);\n    const { genres } = await fetchGenres();\n    // console.log(genres);\n    Loading.hourglass();\n    gallery.insertAdjacentHTML(\n      'afterbegin',\n      watchedGalleryMarkupСreat(data, genres)\n    );\n    Loading.remove();\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nconst watchedGalleryMarkupСreat = (data, genres) => {\n  const markup = `\n      <li class=\"movieCard\">\n              <a data-id=\"${data.id}\">\n                  <img class=\"movieCard__image\" src=\"https://image.tmdb.org/t/p/w500${\n                    data.poster_path\n                  }\" alt=\"movieImg\" />\n                  <p class=\"movieCard__info movieCard__title\">${titleSlice(\n                    data.title\n                  )}</p>\n                      <p class=\"movieCard__info movieCard__description\">${cardGenres(\n                        genres\n                      )} | ${data.release_date.slice(0, 4)}</p>\n              </a>\n      </li>\n    `;\n  return markup;\n};\n\nconst titleSlice = title => {\n  if (title.length > 30) {\n    const titleSliced = title.slice(0, 30) + '...';\n    return titleSliced;\n  } else {\n    return title;\n  }\n};\n\nconst cardGenres = genres => {\n  let cardGenresArr = [];\n\n  for (let genre of genres) {\n    cardGenresArr.push(genre.name);\n  }\n\n  switch (true) {\n    case cardGenresArr.length > 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}, other...`;\n\n    case cardGenresArr.length === 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}`;\n\n    case cardGenresArr.length === 1:\n      return `${cardGenresArr[0]}`;\n\n    default:\n      break;\n  }\n};\n\n// renderWatchedMarkup();\n","import axios from 'axios';\nimport { renderQueueMarkup } from './renderQueueMarkup';\n\nconst btnQueue = document.querySelector('.header_btn-queue');\nconst btnWatched = document.querySelector('.header_btn-watched');\nconst gallery = document.querySelector('.gallery');\n\nconst API_KEY = 'ac91775ba29254b7e75060011bf34a90';\n\nbtnQueue.addEventListener('click', fetchMovieByIdFromStorageQueue);\n\nasync function fetchMovieByIdFromStorageQueue() {\n  btnWatched.classList.remove('current-btn');\n  btnQueue.classList.add('current-btn');\n\n  savedMovies = localStorage.getItem('movieID');\n  parsedMovies = JSON.parse(savedMovies);\n  // console.log(parsedMovies);\n\n  gallery.innerHTML = '';\n\n  for (let movieId of parsedMovies.queue) {\n    // console.log(\n    //   'fetchMovieByIdFromStorageWatched ~ parsedMovies.watched',\n    //   parsedMovies.watched\n    // );\n    // console.log('Here is your movies ID:', movieId);\n\n    try {\n      const { data } = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n      );\n      // renderWatchedMarkup(data);\n      //   console.log(data);\n      renderQueueMarkup(data);\n      // запускаем функцию один раз, иначе уходит в infinity loop\n      //   fetchMovieByIdFromStorageWatched = function () {\n      //     return false;\n      //   };\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n}\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { fetchGenres } from '../fetchGenres';\n\nexport { renderQueueMarkup };\n\nconst gallery = document.querySelector('.gallery');\n\nconst renderQueueMarkup = async data => {\n  try {\n    // const data = await fetchMovieByIdFromStorageWatched();\n    // console.log(data);\n    const { genres } = await fetchGenres();\n    // console.log(genres);\n    Loading.hourglass();\n    gallery.insertAdjacentHTML(\n      'afterbegin',\n      queueGalleryMarkupСreat(data, genres)\n    );\n    Loading.remove();\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nconst queueGalleryMarkupСreat = (data, genres) => {\n  const markup = `\n      <li class=\"movieCard\">\n              <a data-id=\"${data.id}\">\n                  <img class=\"movieCard__image\" src=\"https://image.tmdb.org/t/p/w500${\n                    data.poster_path\n                  }\" alt=\"movieImg\" />\n                  <p class=\"movieCard__info movieCard__title\">${titleSlice(\n                    data.title\n                  )}</p>\n                      <p class=\"movieCard__info movieCard__description\">${cardGenres(\n                        genres\n                      )} | ${data.release_date.slice(0, 4)}</p>\n              </a>\n      </li>\n    `;\n  return markup;\n};\n\nconst titleSlice = title => {\n  if (title.length > 30) {\n    const titleSliced = title.slice(0, 30) + '...';\n    return titleSliced;\n  } else {\n    return title;\n  }\n};\n\nconst cardGenres = genres => {\n  let cardGenresArr = [];\n\n  for (let genre of genres) {\n    cardGenresArr.push(genre.name);\n  }\n\n  switch (true) {\n    case cardGenresArr.length > 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}, other...`;\n\n    case cardGenresArr.length === 2:\n      return `${cardGenresArr[0]}, ${cardGenresArr[1]}`;\n\n    case cardGenresArr.length === 1:\n      return `${cardGenresArr[0]}`;\n\n    default:\n      break;\n  }\n};\n"],"names":["$kfhZi","parcelRequire","$bpxeT","$3edbe494ea87ec58$var$gallery","document","querySelector","$3edbe494ea87ec58$export$1fbb1e823a6c5950","$parcel$interopDefault","$2TvXO","mark","_callee","data","genres","$3likm","fetchGenres","_ctx","sent","$7rQOT","Loading","hourglass","insertAdjacentHTML","remove","console","error","t0","message","concat","id","poster_path","$3edbe494ea87ec58$var$titleSlice","title","$3edbe494ea87ec58$var$cardGenres","release_date","slice","length","cardGenresArr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","genre","value","push","name","err","return","$aa31d2a32f2a478a$var$btnQueue","$aa31d2a32f2a478a$var$btnWatched","$aa31d2a32f2a478a$var$gallery","$aa31d2a32f2a478a$var$API_KEY","$aa31d2a32f2a478a$var$fetchMovieByIdFromStorageWatched","$aa31d2a32f2a478a$var$_fetchMovieByIdFromStorageWatched","apply","this","arguments","movieId","classList","add","savedMovies","localStorage","getItem","parsedMovies","JSON","parse","innerHTML","watched","$dIxxU","default","get","t1","addEventListener","$0b589136e8229473$var$gallery","$0b589136e8229473$export$3a5aa6f3e56312e1","$0b589136e8229473$var$titleSlice","$0b589136e8229473$var$cardGenres","$65a4d08344c41194$var$btnQueue","$65a4d08344c41194$var$btnWatched","$65a4d08344c41194$var$gallery","$65a4d08344c41194$var$API_KEY","$65a4d08344c41194$var$_fetchMovieByIdFromStorageQueue","queue","$eI9Bk","smoothscroll","window","hideScrollUpBtn"],"version":3,"file":"my-library.5139a18a.js.map"}